# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:

- name: "gcr.io/cloud-builders/docker"
  id: Build
  args:
  - "build"
  - "-t"
  - "gcr.io/$PROJECT_ID/demo-app:$BUILD_ID"
  - "."

- name: "gcr.io/cloud-builders/docker"
  id: Push Image to GCR
  args:
  - "push"
  - "gcr.io/$PROJECT_ID/demo-app:$BUILD_ID"

- name: "gcr.io/cloud-builders/gcloud"
  id: "Await QA verification"
  timeout: "500s"
  entrypoint: "/bin/bash"
  args:
  - "-e"
  - "-c"
  - |-
      FULLY_QUALIFIED_IMAGE=$(gcloud container images describe --format 'value(image_summary.fully_qualified_digest)' gcr.io/$PROJECT_ID/demo-app:$BUILD_ID)

      while :; do
        echo "Awaiting verification of image $${FULLY_QUALIFIED_IMAGE}, verify the image at ${_QA_SERVICE_URL}?image=$${FULLY_QUALIFIED_IMAGE}"

        OUT=$(gcloud beta container binauthz attestations list \
        --project "${PROJECT_ID}" \
        --attestor "qa-attestor" \
        --attestor-project "${PROJECT_ID}" \
        --artifact-url "$${FULLY_QUALIFIED_IMAGE}" 2>&1)

        if [[ $${OUT} == *"${_KMS_KEY_VERSION}"* ]]; then
          echo "Image verified!"
          exit 0
        fi

        sleep 10
      done
